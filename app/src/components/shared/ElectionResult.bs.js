// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Context from "../../state/Context.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as ReactNativePaper from "react-native-paper";

function getResultN(results, i) {
  return Belt_Option.getExn(Belt_Array.get(Belt_Option.getExn(Belt_Array.get(results.result, 0)), i));
}

function ElectionResult(Props) {
  var match = Context.use(undefined);
  var state = match[0];
  var result = state.election.result;
  var tmp;
  if (result !== undefined) {
    var results = JSON.parse(result);
    tmp = React.createElement(ReactNativePaper.DataTable, {
          children: null
        }, React.createElement(ReactNativePaper.DataTable.Header, {
              children: null
            }, React.createElement(ReactNativePaper.DataTable.Title, {
                  children: "Candidat"
                }), React.createElement(ReactNativePaper.DataTable.Title, {
                  children: "Score (%)",
                  numeric: true
                }), React.createElement(ReactNativePaper.DataTable.Title, {
                  children: "Score (total)",
                  numeric: true
                })), Belt_Array.mapWithIndex(state.election.choices, (function (i, choice) {
                return React.createElement(ReactNativePaper.DataTable.Row, {
                            children: null,
                            key: String(i)
                          }, React.createElement(ReactNativePaper.DataTable.Cell, {
                                children: choice.name
                              }), React.createElement(ReactNativePaper.DataTable.Cell, {
                                children: String(getResultN(results, i)),
                                numeric: true
                              }), React.createElement(ReactNativePaper.DataTable.Cell, {
                                children: String(getResultN(results, i)),
                                numeric: true
                              }));
              })));
  } else {
    tmp = React.createElement(ReactNativePaper.Text, {
          children: "The election is not closed yet"
        });
  }
  return React.createElement(ReactNative.View, {
              children: tmp
            });
}

var make = ElectionResult;

export {
  getResultN ,
  make ,
}
/* react Not a pure module */
