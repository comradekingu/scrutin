// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belenios from "../helpers/Belenios.bs.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as ReactNative from "react-native";
import * as ReactNativePaper from "react-native-paper";

var styles = ReactNative.StyleSheet.create({
      "margin-x": {
        marginLeft: 15.0,
        marginRight: 15.0
      }
    });

function Election_Booth_ChoiceList$Choice(Props) {
  var name = Props.name;
  var selected = Props.selected;
  var onSelect = Props.onSelect;
  return React.createElement(ReactNativePaper.List.Item, {
              onPress: (function (param) {
                  Curry._1(onSelect, undefined);
                }),
              title: name,
              left: (function (param) {
                  return React.createElement(ReactNativePaper.List.Icon, {
                              icon: selected ? "radiobox-marked" : "radiobox-blank"
                            });
                })
            });
}

var Choice = {
  make: Election_Booth_ChoiceList$Choice
};

function Election_Booth_ChoiceList(Props) {
  var election = Props.election;
  var choice = Props.choice;
  var setChoice = Props.setChoice;
  var disabledOpt = Props.disabled;
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var answers = Belenios.Election.answers(JSON.parse(election.params));
  return React.createElement(ReactNative.View, {
              children: React.createElement(ReactNativePaper.List.Section, {
                    title: disabled ? "Liste des choix" : "Faites votre choix",
                    children: Belt_Array.mapWithIndex(answers, (function (i, choiceName) {
                            if (disabled) {
                              return React.createElement(ReactNativePaper.List.Item, {
                                          title: choiceName
                                        });
                            }
                            var selected = Caml_obj.equal(choice, i);
                            return React.createElement(Election_Booth_ChoiceList$Choice, {
                                        name: choiceName,
                                        selected: selected,
                                        onSelect: (function (param) {
                                            Curry._1(setChoice, (function (param) {
                                                    return i;
                                                  }));
                                          }),
                                        key: String(i)
                                      });
                          })),
                    style: styles["margin-x"]
                  })
            });
}

var make = Election_Booth_ChoiceList;

export {
  styles ,
  Choice ,
  make ,
}
/* styles Not a pure module */
