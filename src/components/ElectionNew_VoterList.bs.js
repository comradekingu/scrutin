// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../X.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as State from "../state/State.bs.js";
import * as React from "react";
import * as ReactNative from "react-native";
import * as EmailValidator from "email-validator";
import * as ReactNativePaper from "react-native-paper";
import * as ElectionNew_VoterItem from "./ElectionNew_VoterItem.bs.js";

function ElectionNew_VoterList(Props) {
  var match = State.useContexts(undefined);
  var dispatch = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setEmail = match$1[1];
  var email = match$1[0];
  var match$2 = React.useState(function () {
        return false;
      });
  var setError = match$2[1];
  var onChangeText = function (txt) {
    Curry._1(setEmail, (function (param) {
            return txt;
          }));
    if (EmailValidator.validate(email)) {
      return Curry._1(setError, (function (param) {
                    return false;
                  }));
    } else {
      return Curry._1(setError, (function (param) {
                    return true;
                  }));
    }
  };
  return React.createElement(ReactNative.View, {
              children: null
            }, React.createElement(ReactNative.View, {
                  children: match[0].election.voters.map(function (voter) {
                        return React.createElement(ElectionNew_VoterItem.make, {
                                    voter: voter,
                                    key: voter.email
                                  });
                      })
                }), React.createElement(ReactNative.View, {
                  style: X.styles.row,
                  children: null
                }, React.createElement(ReactNative.View, {
                      style: X.styles.col,
                      children: React.createElement(ReactNativePaper.TextInput, {
                            mode: "flat",
                            error: match$2[0],
                            placeholder: "Email",
                            value: email,
                            onChangeText: onChangeText
                          })
                    }), React.createElement(ReactNative.View, {
                      style: X.styles.col,
                      children: React.createElement(ReactNativePaper.Button, {
                            mode: "contained",
                            onPress: (function (param) {
                                if (EmailValidator.validate(email)) {
                                  Curry._1(dispatch, {
                                        TAG: /* AddVoter */2,
                                        _0: email
                                      });
                                  return Curry._1(setEmail, (function (param) {
                                                return "";
                                              }));
                                }
                                
                              }),
                            children: React.createElement(ReactNativePaper.Text, {
                                  children: "Ajouter"
                                })
                          })
                    })));
}

var make = ElectionNew_VoterList;

export {
  make ,
}
/* X Not a pure module */
