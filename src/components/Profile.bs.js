// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../X.bs.js";
import * as React from "react";
import * as Context from "../state/Context.bs.js";
import * as Belenios from "../Belenios.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as ReactNativePaper from "react-native-paper";

function Profile(Props) {
  var match = Context.use(undefined);
  var state = match[0];
  var user_id = Belt_Option.getWithDefault(Belt_Option.flatMap(state.user, (function (user) {
              return user.id;
            })), 0);
  return React.createElement(ReactNative.View, {
              style: X.styles["margin-x"],
              children: null
            }, React.createElement(ReactNativePaper.Title, {
                  style: X.styles.title,
                  children: "My elections (as administrator)"
                }), Belt_Array.map(Belt_Array.keep(state.elections, (function (election) {
                        return election.administrator_id === user_id;
                      })), (function (election) {
                    return React.createElement(ReactNativePaper.Text, {
                                children: null,
                                key: String(election.id)
                              }, String(election.id), election.name);
                  })), React.createElement(ReactNativePaper.Title, {
                  style: X.styles.title,
                  children: "My elections (as trustee)"
                }), (console.log(state.trustees), Belt_Array.map(Belt_Array.keep(state.elections, (function (election) {
                          return Belt_Array.some(state.trustees, (function (trustee) {
                                        var election_trustees = election.trustees;
                                        var election_pubkey = election_trustees !== undefined ? Belenios.Trustees.pubkey(election_trustees) : "";
                                        return election_pubkey === trustee.pubkey;
                                      }));
                        })), (function (election) {
                      return React.createElement(ReactNativePaper.Text, {
                                  children: null,
                                  key: String(election.id)
                                }, String(election.id), election.name);
                    }))), React.createElement(ReactNativePaper.Title, {
                  style: X.styles.title,
                  children: "My elections (as voter)"
                }), React.createElement(ReactNativePaper.Title, {
                  style: X.styles.title,
                  children: "TODO"
                }));
}

var make = Profile;

export {
  make ,
}
/* X Not a pure module */
