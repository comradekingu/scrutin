// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../X.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Context from "../state/Context.bs.js";
import * as Belenios from "../Belenios.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as ElectionBooth from "./ElectionBooth.bs.js";
import * as ElectionResult from "./shared/ElectionResult.bs.js";
import * as ReactNativePaper from "react-native-paper";

function ElectionShow(Props) {
  var match = Context.use(undefined);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setShowSnackbar = match$1[1];
  var nb_ballots = String(state.election.ballots.length);
  var nb_votes = String(Belt_Array.keep(state.election.ballots, (function (ballot) {
              return Belt_Option.getWithDefault(ballot.ciphertext, "") !== "";
            })).length);
  React.useState(function () {
        return "home";
      });
  var _result = state.election.result;
  return React.createElement(ReactNative.View, {
              children: null
            }, React.createElement(ReactNativePaper.Title, {
                  style: X.styles.title,
                  children: null
                }, state.election.name, React.createElement(ReactNativePaper.Chip, {
                      mode: "flat",
                      icon: "information",
                      style: X.styles["margin-x"],
                      children: Belt_Option.isNone(state.election.result) ? "En cours" : "Terminée"
                    })), React.createElement(ReactNativePaper.Title, {
                  style: X.styles.subtitle,
                  children: "" + nb_votes + " personnes sur " + nb_ballots + " ont voté"
                }), _result !== undefined ? React.createElement(ElectionResult.make, {}) : React.createElement(ElectionBooth.make, {}), React.createElement(ReactNativePaper.Button, {
                  mode: "contained",
                  onPress: (function (param) {
                      var trustee = Belt_Array.getBy(state.trustees, (function (trustee) {
                              var election_pubkey = Belt_Option.getWithDefault(Belt_Option.map(Belt_Option.map(state.election.trustees, (function (prim) {
                                              return prim;
                                            })), Belenios.Trustees.pubkey), "");
                              return trustee.pubkey === election_pubkey;
                            }));
                      if (trustee !== undefined) {
                        return Curry._1(dispatch, {
                                    TAG: /* Election_Tally */10,
                                    _0: trustee
                                  });
                      } else {
                        return Curry._1(setShowSnackbar, (function (param) {
                                      return true;
                                    }));
                      }
                    }),
                  children: "Tally"
                }), React.createElement(ReactNativePaper.Portal, {
                  children: React.createElement(ReactNativePaper.Snackbar, {
                        onDismiss: (function (param) {
                            Curry._1(setShowSnackbar, (function (param) {
                                    return false;
                                  }));
                          }),
                        visible: match$1[0],
                        children: "You don't have the election private key"
                      })
                }));
}

var make = ElectionShow;

export {
  make ,
}
/* X Not a pure module */
