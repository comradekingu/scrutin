// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../X.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Context from "../state/Context.bs.js";
import * as Belenios from "../Belenios.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactNative from "react-native";
import * as ElectionResult from "./ElectionResult.bs.js";
import * as ReactNativePaper from "react-native-paper";

function ElectionShow(Props) {
  var match = Context.use(undefined);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setShowSnackbar = match$1[1];
  var nb_ballots = String(state.election.ballots.length);
  var nb_votes = String(Belt_Array.keep(state.election.ballots, (function (ballot) {
              return Belt_Option.isSome(ballot.ciphertext);
            })).length);
  var tally = function (param) {
    console.log(state.trustees);
    var trustee = Belt_Array.getBy(state.trustees, (function (trustee) {
            return trustee.pubkey === Belt_Option.getWithDefault(Belt_Option.map(Belt_Option.map(state.election.trustees, (function (prim) {
                                  return prim;
                                })), Belenios.Trustees.pubkey), "");
          }));
    if (trustee === undefined) {
      return Curry._1(setShowSnackbar, (function (param) {
                    return true;
                  }));
    }
    var params = Belt_Option.getExn(state.election.params);
    var ballots = Belt_Array.map(Belt_Array.keep(Belt_Array.map(state.election.ballots, (function (ballot) {
                    return ballot.ciphertext;
                  })), Belt_Option.isSome), Belt_Option.getExn);
    var trustees = Belt_Option.getExn(state.election.trustees);
    var pubcreds = (JSON.parse(state.election.creds));
    var match = Belenios.Election.decrypt(params)(ballots, trustees, pubcreds, trustee.privkey);
    var res = Belenios.Election.result(params)(ballots, trustees, pubcreds, match[0], match[1]);
    Curry._1(dispatch, {
          TAG: /* Election_PublishResult */0,
          _0: res
        });
  };
  React.useState(function () {
        return "home";
      });
  return React.createElement(ReactNative.View, {
              children: null
            }, React.createElement(ReactNativePaper.Title, {
                  style: X.styles.title,
                  children: state.election.name
                }), React.createElement(ReactNativePaper.Title, {
                  style: X.styles.subtitle,
                  children: "" + nb_votes + "/" + nb_ballots + " voted"
                }), React.createElement(ReactNative.View, {
                  style: X.styles.separator
                }), React.createElement(ReactNative.View, {
                  children: React.createElement(ElectionResult.make, {})
                }), React.createElement(X.Row.make, {
                  children: null
                }, React.createElement(X.Col.make, {
                      children: React.createElement(ReactNativePaper.Button, {
                            onPress: (function (param) {
                                Curry._1(dispatch, {
                                      TAG: /* Navigate */11,
                                      _0: {
                                        TAG: /* ElectionBooth */1,
                                        _0: state.election.id
                                      }
                                    });
                              }),
                            children: "Vote"
                          })
                    }), React.createElement(X.Col.make, {
                      children: React.createElement(ReactNativePaper.Button, {
                            onPress: tally,
                            children: "Tally"
                          })
                    })), React.createElement(ReactNativePaper.Portal, {
                  children: React.createElement(ReactNativePaper.Snackbar, {
                        onDismiss: (function (param) {
                            Curry._1(setShowSnackbar, (function (param) {
                                    return false;
                                  }));
                          }),
                        visible: match$1[0],
                        children: "You don't have the election private key"
                      })
                }));
}

var make = ElectionShow;

export {
  make ,
}
/* X Not a pure module */
