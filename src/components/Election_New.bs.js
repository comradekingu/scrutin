// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Context from "../Context.bs.js";
import * as Trustee from "../model/Trustee.bs.js";
import * as Election from "../model/Election.bs.js";
import * as Identity from "../model/Identity.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Transaction from "../model/Transaction.bs.js";
import * as ReactNativePaper from "react-native-paper";
import * as Election_New_ChoiceList from "./Election_New_ChoiceList.bs.js";

function Election_New(Props) {
  var match = Context.use(undefined);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setName = match$1[1];
  var name = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var setDesc = match$2[1];
  var desc = match$2[0];
  var match$3 = React.useState(function () {
        return [];
      });
  var choices = match$3[0];
  var onSubmit = function (param) {
    var identity = Belt_Array.get(state.ids, 0);
    var identity$1;
    if (identity !== undefined) {
      identity$1 = identity;
    } else {
      var identity$2 = Identity.make(undefined);
      Curry._1(dispatch, {
            TAG: /* Identity_Add */1,
            _0: identity$2
          });
      identity$1 = identity$2;
    }
    var trustee = Trustee.make(undefined);
    var election = Election.make(name, desc, choices, identity$1.hexPublicKey, trustee);
    var transaction = Transaction.SignedElection.make(election, identity$1);
    Curry._1(dispatch, {
          TAG: /* Trustee_Add */3,
          _0: trustee
        });
    Curry._1(dispatch, {
          TAG: /* Transaction_Add */2,
          _0: transaction
        });
    Curry._1(dispatch, {
          TAG: /* Navigate */0,
          _0: {
            TAG: /* Election_Show */0,
            _0: transaction.eventHash
          }
        });
  };
  var user = Belt_Array.get(state.ids, 0);
  return React.createElement(React.Fragment, undefined, React.createElement(ReactNativePaper.TextInput, {
                  mode: "flat",
                  label: "Nom de l'Ã©lection",
                  value: name,
                  onChangeText: (function (text) {
                      Curry._1(setName, (function (param) {
                              return text;
                            }));
                    }),
                  testID: "election-name"
                }), React.createElement(ReactNativePaper.TextInput, {
                  mode: "flat",
                  label: "Description",
                  value: desc,
                  onChangeText: (function (text) {
                      Curry._1(setDesc, (function (param) {
                              return text;
                            }));
                    }),
                  testID: "election-desc"
                }), React.createElement(Election_New_ChoiceList.make, {
                  choices: choices,
                  setChoices: match$3[1]
                }), user !== undefined ? React.createElement(ReactNativePaper.List.Item, {
                    title: "Owner",
                    description: user.hexPublicKey
                  }) : React.createElement(ReactNativePaper.List.Item, {
                    title: "Owner",
                    description: "No public key found"
                  }), React.createElement(ReactNativePaper.Button, {
                  mode: "contained",
                  onPress: onSubmit,
                  children: "Create"
                }));
}

var make = Election_New;

export {
  make ,
}
/* react Not a pure module */
