// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../helpers/X.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Context from "../state/Context.bs.js";
import * as Identity from "../state/Identity.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_MapString from "rescript/lib/es6/belt_MapString.js";
import * as Home_Transactions from "./Home_Transactions.bs.js";
import * as ReactNativePaper from "react-native-paper";

function Home(Props) {
  var match = Context.use(undefined);
  var dispatch = match[1];
  var state = match[0];
  var genIdentity = function (param) {
    Curry._1(dispatch, {
          TAG: /* Identity_Add */1,
          _0: Identity.make(undefined)
        });
  };
  var match$1 = state.route;
  switch (match$1) {
    case /* Home_Elections */0 :
        return React.createElement(React.Fragment, undefined, React.createElement(X.Title.make, {
                        children: "Elections"
                      }), Belt_Array.map(Belt_MapString.toArray(state.cache.elections), (function (param) {
                          var eventHash = param[0];
                          return React.createElement(ReactNativePaper.List.Item, {
                                      title: "0x" + eventHash,
                                      key: eventHash
                                    });
                        })), React.createElement(ReactNativePaper.Button, {
                        mode: "contained",
                        onPress: (function (param) {
                            Curry._1(dispatch, {
                                  TAG: /* Navigate */0,
                                  _0: /* Election_New */3
                                });
                          }),
                        children: "New election"
                      }));
    case /* Home_Identities */1 :
        return React.createElement(React.Fragment, undefined, React.createElement(X.Title.make, {
                        children: "Identit√©s"
                      }), React.createElement(ReactNativePaper.List.Section, {
                        title: "",
                        children: Belt_Array.map(state.ids, (function (id) {
                                return React.createElement(ReactNativePaper.List.Item, {
                                            title: "0x" + id.hexPublicKey,
                                            key: id.hexPublicKey
                                          });
                              })),
                        style: X.styles["margin-x"]
                      }), React.createElement(ReactNativePaper.Button, {
                        mode: "outlined",
                        onPress: genIdentity,
                        children: "Generate identity"
                      }), React.createElement(ReactNativePaper.Button, {
                        mode: "outlined",
                        onPress: (function (param) {
                            Identity.clear(undefined);
                          }),
                        children: "Clear identities"
                      }));
    case /* Home_Transactions */2 :
        return React.createElement(Home_Transactions.make, {});
    case /* Election_New */3 :
        return React.createElement(ReactNativePaper.Text, {
                    children: "Unknown route"
                  });
    
  }
}

var make = Home;

export {
  make ,
}
/* X Not a pure module */
