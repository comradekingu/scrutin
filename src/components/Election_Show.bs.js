// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../helpers/X.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Config from "../helpers/Config.bs.js";
import * as Context from "../state/Context.bs.js";
import * as Identity from "../state/Identity.bs.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Belt_MapString from "rescript/lib/es6/belt_MapString.js";
import * as ReactNativePaper from "react-native-paper";

function Election_Show(Props) {
  var eventHash = Props.eventHash;
  var match = Context.use(undefined);
  var dispatch = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setEmail = match$1[1];
  var email = match$1[0];
  var election = Belt_MapString.getExn(match[0].cache.elections, eventHash);
  var publicKey = election.ownerPublicKey;
  var addBallot = function (param) {
    var id = Identity.make(undefined);
    var hexSecretKey = Belt_Option.getExn(id.hexSecretKey);
    var message = "\n      Hello !\n      Vous êtes invité à l'election.\n      Voici votre clé privée " + hexSecretKey + "\n      Pour information, la clé publique associée est " + id.hexPublicKey + "\n      L'organisateur vient de creer un bulletin de vote avec cette clé publique.\n    ";
    var dict = {};
    dict["email"] = email;
    dict["message"] = message;
    X.post("" + Config.api_url + "/users/email_confirmation", dict);
  };
  var onPress = function (param) {
    Curry._1(dispatch, {
          TAG: /* Navigate */0,
          _0: {
            TAG: /* Identity_Show */1,
            _0: publicKey
          }
        });
  };
  return React.createElement(React.Fragment, undefined, React.createElement(ReactNativePaper.List.Section, {
                  title: "Election",
                  children: null
                }, React.createElement(ReactNativePaper.List.Item, {
                      title: "Event Hash",
                      description: eventHash
                    }), React.createElement(ReactNativePaper.List.Item, {
                      onPress: onPress,
                      title: "Owner Public Key",
                      description: publicKey
                    }), React.createElement(ReactNativePaper.List.Item, {
                      title: "Params",
                      description: election.params
                    }), React.createElement(ReactNativePaper.List.Item, {
                      title: "Trustees",
                      description: election.trustees
                    })), React.createElement(ReactNativePaper.Divider, {}), React.createElement(ReactNativePaper.TextInput, {
                  mode: "flat",
                  label: "Email",
                  value: email,
                  onChangeText: (function (text) {
                      Curry._1(setEmail, (function (param) {
                              return text;
                            }));
                    })
                }), React.createElement(ReactNativePaper.Button, {
                  mode: "outlined",
                  onPress: addBallot,
                  children: "Add as voter"
                }));
}

var make = Election_Show;

export {
  make ,
}
/* X Not a pure module */
