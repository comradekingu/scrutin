// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../helpers/X.bs.js";
import * as React from "react";
import * as Context from "../state/Context.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Transaction from "../state/Transaction.bs.js";
import * as ReactNativePaper from "react-native-paper";

function Home_Transactions$Election(Props) {
  var tx = Props.tx;
  var election = Props.election;
  return React.createElement(ReactNativePaper.Card, {
              children: null
            }, React.createElement(ReactNativePaper.Card.Content, {
                  children: null
                }, React.createElement(ReactNativePaper.Title, {
                      children: tx.eventHash
                    }), React.createElement(ReactNativePaper.Text, {
                      children: tx.eventType
                    }), React.createElement(ReactNativePaper.Text, {
                      children: election.params
                    }), React.createElement(ReactNativePaper.Text, {
                      children: election.trustees
                    }), React.createElement(ReactNativePaper.Text, {
                      children: election.ownerPublicKey
                    })), React.createElement(ReactNativePaper.Card.Actions, {
                  children: null
                }, React.createElement(ReactNativePaper.Button, {
                      children: "Cancel"
                    }), React.createElement(ReactNativePaper.Button, {
                      children: "Ok"
                    })));
}

var Election = {
  make: Home_Transactions$Election
};

function Home_Transactions(Props) {
  var match = Context.use(undefined);
  var state = match[0];
  return React.createElement(React.Fragment, undefined, React.createElement(X.Title.make, {
                  children: "Transactions"
                }), React.createElement(React.Fragment, undefined, Belt_Array.map(state.txs, (function (tx) {
                        var match = tx.eventType;
                        if (match !== "election") {
                          return React.createElement(ReactNativePaper.Text, {
                                      children: "Unknown event type"
                                    });
                        }
                        var election = Transaction.SignedElection.unwrap(tx);
                        return React.createElement(Home_Transactions$Election, {
                                    tx: tx,
                                    election: election,
                                    key: tx.eventHash
                                  });
                      }))), React.createElement(ReactNativePaper.List.Section, {
                  title: "",
                  children: Belt_Array.map(state.txs, (function (tx) {
                          return React.createElement(ReactNativePaper.List.Item, {
                                      title: "0x" + tx.eventHash,
                                      key: tx.eventHash
                                    });
                        })),
                  style: X.styles["margin-x"]
                }));
}

var make = Home_Transactions;

export {
  Election ,
  make ,
}
/* X Not a pure module */
